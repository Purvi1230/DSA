Description

You are given an expression of the form A op B, where an operator is in-between every pair of operands. This form of expression is also called Infix expression.  You have to convert it to an expression of the form A B op, where an operator is followed for every pair of operands. This form of expression is also called Postfix expression. The operators can be: ^, -, +, *, /. The priority of operators is as follows '+', '-', '*', '/', '^' (increasing left to right) '^' is for exponentiation. The operands are lowercase English alphabets.

To read more about Infix and Postfix expression, you can refer to this link. (www.cs.man.ac.uk › ~pjj › fix)

Your task is to convert Infix expression to Postfix expression.


Input Format

The first line of the input contains one integer T - the number of test cases. Then T test cases follow.
The first line of each test case contains a string S.


Output Format

For each test case, print the Postfix expression of the given Infix expression.


Constraints

1 ≤ T ≤ 103
1 ≤ |S| ≤ 103


Sample Input 1

5
(a*b)+c
a*(b^c+d)-e
b
()
(a)

Sample Output 1

ab*c+
abc^d+*e-
b

a
 Description

You are given an expression of the form A op B, where an operator is in-between every pair of operands. This form of expression is also called Infix expression.  You have to convert it to an expression of the form A B op, where an operator is followed for every pair of operands. This form of expression is also called Postfix expression. The operators can be: ^, -, +, *, /. The priority of operators is as follows '+', '-', '*', '/', '^' (increasing left to right) '^' is for exponentiation. The operands are lowercase English alphabets.

To read more about Infix and Postfix expression, you can refer to this link. (www.cs.man.ac.uk › ~pjj › fix)

Your task is to convert Infix expression to Postfix expression.


Input Format

The first line of the input contains one integer T - the number of test cases. Then T test cases follow.
The first line of each test case contains a string S.


Output Format

For each test case, print the Postfix expression of the given Infix expression.


Constraints

1 ≤ T ≤ 103
1 ≤ |S| ≤ 103


Sample Input 1

5
(a*b)+c
a*(b^c+d)-e
b
()
(a)

Sample Output 1

ab*c+
abc^d+*e-
b

a
 